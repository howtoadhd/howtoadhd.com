server {
    listen 80;
    server_name "~^www\.(.*)$" ;
    return 301 https://$1$request_uri ;
}

server {
    listen 80 default_server;
    server_name _;

    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;
    real_ip_header X-Forwarded-For;

    if ($http_x_forwarded_proto != 'https') {
        return 301 https://$host$request_uri?;
    }

    if ($host ~* www\.(.*)) {
        set $host_without_www $1;
        rewrite ^(.*)$ $scheme://$host_without_www$1 permanent;
    }

    root /var/www/wordpress;

    location / {
        index index.php;
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location /favicon.ico {
        access_log off;
        log_not_found off;
        return 404;
    }

    # Deny direct access to PHP files in wp-includes, wp-admin/includes & wp-content.
    location ~ /wp-(includes|admin\/includes|content)/(.+)\.php$ {
        access_log off;
        log_not_found off;
        deny all;
    }

    # Deny direct access to PHP files in the WordPress root.
    location ~ /(wp-(activate|blog-header|comments-post|config-sample|cron|links-opml|load|mail|settings|signup|trackback|)|xmlrpc).php$ {
        access_log off;
        log_not_found off;
        deny all;
    }

    # Requests to WordPress are made in /wordpress/, which is at the same
    # level as /wp-content/. To properly handle these, we provide an alias
    # to move up a directory and find static files.
    location ~ ^/wp-content/(.*)$ {
        expires 7d;
        alias /var/www/wp-content/$1;
    }

    # Handle all static assets by serving the file directly. Add directives
    # to send expires headers and turn off 404 error logging.
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|xls|doc|zip|exe|mp3|mp4|pdf|ai|psd|eps|ppt|dmg|csv|key|numbers|pages)$ {

        expires 7d;
        log_not_found off;
    }

    # Prevent hidden files (beginning with a period) from being served.
    #
    # Access to `/.well-known/` is allowed.
    #   - https://www.mnot.net/blog/2010/04/07/well-known
    #   - https://tools.ietf.org/html/rfc5785
    location ~* /\.(?!well-known\/) {
        access_log off;
        log_not_found off;
        deny all;
    }

    # Via https://github.com/h5bp/server-configs-nginx/
    #
    # Prevent a variety of file extensions associated with backups and configs
    # from being served.
    location ~* (?:\.(?:bak|conf|dist|fla|in[ci]|log|sh|sql|sw[op])|~)$ {
        access_log off;
        log_not_found off;
        deny all;
    }

    location ~ \.php$ {
        client_max_body_size 150M;
        try_files      $uri =404;

        # Include the fastcgi_params defaults provided by nginx
        include        /etc/nginx/fastcgi_params;

        fastcgi_read_timeout 60s;

        # SCRIPT_FILENAME is a required parameter for things to work properly,
        # but was missing in the default fastcgi_params on upgrade to nginx 1.4.
        # We define it here to be sure that it exists.
        fastcgi_param   SCRIPT_FILENAME         $document_root$fastcgi_script_name;

        # Use the upstream for php5-fpm that we defined in nginx.conf
        fastcgi_pass   {
        {
            FASTCGI_PASS
        }
    };

    # And get to serving the file!
    fastcgi_index  index.php;
}
}